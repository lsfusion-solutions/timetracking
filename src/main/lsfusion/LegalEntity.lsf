MODULE LegalEntity;

REQUIRE Customer, Person;

NAMESPACE LegalEntity;

CLASS LegalEntity 'Юридическое лицо';
TABLE legalEntity (LegalEntity);

//id 'Код' = DATA STRING[15] (LegalEntity) INDEXED CHARWIDTH 5 IN id;
//legalEntity (id) = GROUP AGGR LegalEntity le BY id (le);

shortName 'Сокращённое название' = DATA ISTRING[250] (LegalEntity) CHARWIDTH 20 IN id;
fullName 'Полное название' = DATA ISTRING[250] (LegalEntity) CHARWIDTH 25;

shortNameLat 'Сокращённое название латиницей' = DATA ISTRING[250] (LegalEntity) CHARWIDTH 20;
fullNameLat 'Полное название латиницей' = DATA ISTRING[250] (LegalEntity) CHARWIDTH 25;

customer = DATA Customer(LegalEntity) INDEXED;
nameCustomer 'Клиент' (LegalEntity l) = name(customer(l)) IN id;

CLASS Form 'Форма хозяйства' {
    ao 'Акционерное общество',
    ooo 'Общество с ограниченной ответственностью'
}
name 'Наименование' (Form f) = staticCaption(f) IF f IS Form CHARWIDTH 20;
shortName 'Краткое наименование' (Form f) = CASE WHEN f = Form.ao THEN 'АО' WHEN f = Form.ooo THEN 'ООО' CHARWIDTH 4;

FORM forms 'Форма хозяйства'
    OBJECTS f = Form
    PROPERTIES (f) READONLY name
;

form = DATA Form(LegalEntity);
nameFrom 'Форма хозяйства' (LegalEntity l) = name(form(l));
shortNameFrom 'Форма хозяйства' (LegalEntity l) = shortName(form(l));

GROUP params 'Параметры';

address 'Юридический адрес' = DATA ISTRING[250](LegalEntity) CHARWIDTH 20 IN params;

representative = DATA Person(LegalEntity);
nameRepresentative 'Представитель по умолчанию' (LegalEntity l) = name(representative(l)) CHARWIDTH 20;
baseRepresentative 'Основание представителя' = DATA ISTRING[250](LegalEntity) CHARWIDTH 20;
positionRepresentative 'Должность представителя' = DATA ISTRING[250](LegalEntity) CHARWIDTH 20;

phone 'Номер телефона' = DATA ISTRING[50](LegalEntity) CHARWIDTH 15;
okpo 'ОКПО' = DATA ISTRING[50](LegalEntity) CHARWIDTH 10;
okato 'ОКАТО' = DATA ISTRING[100](LegalEntity) CHARWIDTH 50;
oktmo 'ОКТМО' = DATA ISTRING[50](LegalEntity) CHARWIDTH 10;
okved 'ОКВЭД' = DATA ISTRING[100](LegalEntity) CHARWIDTH 50;

CONSTRAINT representative(LegalEntity l) AND NOT customer(representative(l)) == customer(l) CHECKED BY representative[LegalEntity] 
    MESSAGE 'Клиент представителя не совпадает с клиентом организации';

CLASS Account 'Банковский счёт';
TABLE account (Account);

number 'Номер счёта'  = DATA STRING[50] (Account) IN id CHARWIDTH 28 NOFLEX;
account (number) = GROUP MAX Account account BY number(account);

legalEntity = DATA LegalEntity (Account) NONULL DELETE AUTOSET;
nameLegalEntity 'Организация' (Account account) = shortName(legalEntity(account));
nameCustomer 'Клиент' (Account account) = name(customer(legalEntity(account)));

account (number, legalEntity) = GROUP MAX Account account BY number(account), legalEntity(account);
defaultAccount(legalEntity) = GROUP MAX Account account BY legalEntity(account);

userAccount = DATA Account (LegalEntity);
CONSTRAINT legalEntity(userAccount(LegalEntity legalEntity)) != legalEntity CHECKED MESSAGE 'ошибка: Р/сч. по умолчанию должен соответствовать р/сч. Ю.Л.';

account (LegalEntity legalEntity) =  OVERRIDE userAccount(legalEntity), defaultAccount(legalEntity) MATERIALIZED INDEXED;
numberAccount 'Банковский счёт по умолчанию' (LegalEntity legalEntity) = number(account(legalEntity));

equals 'Основной' (LegalEntity legalEntity, Account account) = userAccount(legalEntity) == account;

//accountID 'Расчетный счет по номеру' (number, legalEntityId) = GROUP AGGR Account account WHERE account IS Account BY number(account), id(legalEntity(account));
//legalEntityAccount (STRING[20] number) = legalEntity(account(number)); 

bank = DATA Bank (Account);
nameBank 'Банк' (Account account) = name(bank(account)) IN id;
bicBank 'БИК банка' (Account a) = bic(bank(a));
swiftBank 'SWIFT банка' (Account a) = swift(bank(a));
numberAccountBank 'Корреспондентский счёт банка' (Account a) = numberAccount(bank(a));
nameBank 'Банк' (LegalEntity legalEntity) = nameBank(account(legalEntity));

FORM account 'Счёт'
    OBJECTS a = Account PANEL 
    PROPERTIES (a) nameLegalEntity, number, nameBank
    
    EDIT Account OBJECT a
;

FORM accounts 'Счета'
    OBJECTS a = Account 
    PROPERTIES (a) READONLY number, nameLegalEntity, nameBank, bicBank, swiftBank
    PROPERTIES (a) NEWSESSION NEW, EDIT, DELETE 
    
    LIST Account OBJECT a
;

NAVIGATOR {
    masterData {
        NEW banks;
        NEW accounts;
    }
}

employee = DATA Employee (LegalEntity);
nameEmployee 'Сотрудник' (LegalEntity l) = name(employee(l));
country 'Страна регистрации' = DATA STRING[100] (LegalEntity) CHARWIDTH 20;
addressIsActual 'Фактический адрес совпадает с юридическим адресом' = DATA BOOLEAN (LegalEntity);
actualAddress 'Фактический адрес' = DATA ISTRING[250] (LegalEntity)CHARWIDTH 20;

WHEN LOCAL SET(addressIsActual(LegalEntity l)) DO actualAddress(l) <- address(l);
WHEN LOCAL DROPPED(addressIsActual(LegalEntity l)) DO actualAddress(l) <- '';

addressIsMailing 'Почтовый адрес совпадает с юридическим адресом' = DATA BOOLEAN (LegalEntity);
mailingAddress 'Почтовый адрес' = DATA ISTRING[250] (LegalEntity)CHARWIDTH 20;

WHEN LOCAL SET(addressIsMailing(LegalEntity l)) DO mailingAddress(l) <- address(l);
WHEN LOCAL DROPPED(addressIsMailing(LegalEntity l)) DO mailingAddress(l) <- '';

email '{authentication.email.contact}'= DATA STRING[400] (LegalEntity) CHARWIDTH 20 REGEXP '[-!#-\'*+/-9=?A-Z^-~]+(\\.[-!#-\'*+/-9=?A-Z^-~]+)*@[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?(\\.[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?)+' '<html>{authentication.email.contact.incorrect}</html>';
note 'Комментарий' = DATA TEXT (LegalEntity);

FORM legalEntity 'Юридическое лицо'
    OBJECTS o = LegalEntity PANEL
    PROPERTIES(o) shortNameFrom, shortName, fullName, shortNameLat, fullNameLat, nameCustomer, addr = address, nameEmployee, country,
                  addressIsActual, actualAddress READONLYIF addressIsActual(o), addressIsMailing, mailingAddress READONLYIF addressIsMailing(o),
                  email, note,
                  nameRepresentative, positionRepresentative, baseRepresentative, phone, okpo, okato, oktmo, okved, numberAccount
    
    OBJECTS a=Account
    PROPERTIES(a) number, nameBank, bicBank, swiftBank, NEW, DELETE GRID
    FILTERS legalEntity(a) == o
    PROPERTIES equals(o, a)
    
    EDIT LegalEntity OBJECT o
;

DESIGN legalEntity {
    BOX (o) {
        fill = 1;
        NEW tabPane {
            fill = 1;
            type = TABBED;
            NEW main {
                //type = SCROLL;
                caption = 'Главная';
                NEW first {
                    type = CONTAINERH;
                    caption = 'Основые параметры';
                    //MOVE PROPERTY (id(o));
                    MOVE PROPERTY (nameCustomer(o));
                    MOVE PROPERTY (shortNameFrom(o));
                }
                NEW names {
                    type = CONTAINERH;
                    NEW nameRus {
                        caption = 'Название';
                        MOVE PROPERTY (shortName(o)) { caption = 'Сокращенное'; }
                        MOVE PROPERTY (fullName(o))  { caption = 'Полное'; }
                    }
                    NEW nameLat {
                        caption = 'Название (латиницей)';
                        MOVE PROPERTY (shortNameLat(o)) { caption = 'Сокращенное'; }
                        MOVE PROPERTY (fullNameLat(o))  { caption = 'Полное'; }
                    }
                }
                NEW other {
                    NEW otherFirst {
                        type = CONTAINERH;
                        NEW info {
                            caption = 'Контакты';
                            MOVE PROPERTY (addr);
                            MOVE PROPERTY (phone(o));
                            MOVE PROPERTY (numberAccount(o));
                            MOVE PROPERTY (nameEmployee(o));
                            MOVE PROPERTY (country(o));
                            MOVE PROPERTY (addressIsActual(o));
                            MOVE PROPERTY (actualAddress(o));
                            MOVE PROPERTY (addressIsMailing(o));
                            MOVE PROPERTY (mailingAddress(o));
                            MOVE PROPERTY (email(o));
                        }
                        NEW repres {
                            caption = 'Представитель';
                            MOVE PROPERTY (nameRepresentative(o)) { caption = 'Имя'; }
                            MOVE PROPERTY (positionRepresentative(o)) { caption = 'Должность'; }
                            MOVE PROPERTY (baseRepresentative(o)) { caption = 'Основание'; }
                        }
                    }
                }
                NEW numbers {
                    caption = 'Информация';
                    NEW line1 {
                        type = CONTAINERH;
                        MOVE PROPERTY (okpo(o));
                        MOVE PROPERTY (oktmo(o));
                    } 
                    NEW line2 {
                        MOVE PROPERTY (okved(o));
                        MOVE PROPERTY (okato(o));
                    }
                }
                MOVE BOX(a) { fill = 1; height = 250; }
            }
        }
    }
}

FORM legalEntities 'Юридические лица'
    OBJECTS o = LegalEntity
    PROPERTIES(o) READONLY shortNameFrom, shortName, fullName, shortNameLat, fullNameLat, nameCustomer, address, nameRepresentative, 
                           baseRepresentative, positionRepresentative, phone, okpo, okato, oktmo, okved, numberAccount
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
    ORDERS shortName(o)
;

NAVIGATOR {
    masterData {
        NEW legalEntities AFTER persons;
    }
}

form (LegalEntity c) <- Form.ooo WHEN SET (c IS LegalEntity);
baseRepresentative (LegalEntity c) <- 'Устава' WHEN SET (c IS LegalEntity);
positionRepresentative (LegalEntity c) <- 'Генеральный директор' WHEN SET (c IS LegalEntity);

in 'Вкл' = DATA BOOLEAN (Person, LegalEntity);

EXTEND FORM person
    OBJECTS l = LegalEntity
    PROPERTIES(l) ON CHANGE { NEWSESSION {SHOW legalEntity OBJECTS o = l; }} shortNameFrom, fullName, address, phone
    FILTERS in(p, l)
;

DESIGN person {
    body {
        NEW legalEntities {
            caption = 'Юридические лица';
            fill = 1;
            MOVE BOX(l);
        }
    }
}

addPerson 'Добавить' (LegalEntity l) {
    NEWSESSION {
        DIALOG persons OBJECTS p INPUT DO {
            in(p, l) <- TRUE;
        }
        APPLY;
    }
} IMAGE 'add.png';

deletePerson 'Удалить' (LegalEntity l, Person p) {
    NEWSESSION {
        in(p, l) <- NULL;
        APPLY;
    }
} IMAGE 'delete.png';

GPH 'ГПХ ' = DATA BOOLEAN (Person);
prepaidDate 'Дата аванса' = DATA DATE (Person);
salary 'Заработная плата' = DATA STRING[50] (Person) CHARWIDTH 20;
benefits 'Наличие пособий' = DATA STRING[150] (Person) CHARWIDTH 40;
actList 'Наличие исполнительных листов' = DATA STRING[150] (Person) CHARWIDTH 40;
other 'Прочее' = DATA  STRING[150] (Person) CHARWIDTH 40;

EXTEND FORM legalEntity
    OBJECTS p = Person
    PROPERTIES(p) READONLY lastName, firstName, middleName, address, phone, email
    PROPERTIES DRAW p TOOLBAR addPerson(o), deletePerson(o, p)
    FILTERS in(p, o)
    
//    OBJECTS p2 = Person
//    PROPERTIES(p2) READONLY lastName, firstName, middleName
//    PROPERTIES(p2) GPH, prepaidDate, salary, benefits, actList, other
//    FILTERS in(p2, o)
;

DESIGN legalEntity {
    tabPane {
        NEW persons {
            caption = 'Физические лица';
            MOVE BOX(p);
            //MOVE BOX(p2) { caption = 'Сотрудники'; }
            MOVE PROPERTY(note(o)) {
                panelCaptionAbove = TRUE;
                height = 70;
            }
        }
    }
}

//counterpartyLegalEntity 'Контрагент' = DATA LegalEntity (Customer);
//nameCounterpartyLegalEntity 'Контрагент' (Customer c) = shortName(counterpartyLegalEntity(c));
//
//WHEN LOCAL CHANGED(type(Customer c)) AND NOT type(c) == CounterpartyType.legalEntity DO {
//    counterpartyLegalEntity(c) <- NULL;
//}
//
//EXTEND FORM customer
//    PROPERTIES(c) nameCounterpartyLegalEntity SHOWIF type(c) == CounterpartyType.legalEntity AFTER nameType(c)
//;
//
//DESIGN customer {
//    lane2 {
//        MOVE PROPERTY(nameCounterpartyLegalEntity(c));
//    }
//}

position 'Должность' = DATA Position (LegalEntity, Person);
namePosition 'Должность' (LegalEntity c, Person p) = name(position(c, p));

EXTEND FORM legalEntity
    PROPERTIES namePosition(o, p);
;

EXTEND FORM customer
    OBJECTS r = Person

    PROPERTIES(r) READONLY lastName, firstName, middleName,  email, phone
    ORDERS lastName(r)
    FILTERS customer(r) == c OR (GROUP SUM 1 IF in(r, LegalEntity l) AND customer(l) == c)   
;

DESIGN customer {
    tabPane {
        caption = 'Контактные лица';
        MOVE BOX(r);
    }
}

addLegalEntity 'Добавить' (Person p) {
    NEWSESSION {
        DIALOG legalEntities OBJECTS o INPUT DO {
            in(p, o) <- TRUE;
        }
        APPLY;
    }
} IMAGE 'add.png';

EXTEND FORM person 
    PROPERTIES namePosition(l, p) AFTER fullName(l)
    PROPERTIES DRAW l TOOLBAR addLegalEntity(p), deletePerson(l, p)
;

in 'Вкл' = DATA BOOLEAN (Customer, LegalEntity);
in 'Вкл' = DATA BOOLEAN (Customer, Person);

FORM conterparties 'Контрагенты'
    OBJECTS c = Customer PANEL
    
    OBJECTS l = LegalEntity
    PROPERTIES in(c, l)
    PROPERTIES(l) READONLY shortNameFrom, shortName, shortNameLat
    
    OBJECTS p = Person
    PROPERTIES in(c, p)
    PROPERTIES(p) READONLY lastName, firstName, middleName
;

DESIGN conterparties {
    OBJECTS {
        type = TABBED;
        MOVE BOX(l);
        MOVE BOX(p);
    }
}

nameConterparties 'Контрагенты' (Customer c) = CONCAT ', ', (GROUP CONCAT shortName(LegalEntity l) IF in(c, l), ', '),
    GROUP CONCAT (CONCAT ' ', lastName(Person p), firstName(p), middleName(p)) IF in(c, p), ', ' CHARWIDTH 50;

EXTEND FORM customer
    PROPERTIES nameConterparties(c) ON CHANGE { DIALOG conterparties OBJECTS c = c; }
;

DESIGN customer {
    BOX(c) {
        NEW lane2 {
            type = CONTAINERH;
            MOVE PROPERTY(nameConterparties(c));
        }
    }
}

EXTEND FORM legalEntity
    PROPERTIES READONLY nameConterparties 'Входит в группу' = nameConterparties(customer(o))
;

DESIGN legalEntity {
    first {
        MOVE PROPERTY(nameConterparties) AFTER PROPERTY(nameCustomer(o));
    }
}

CLASS LeFile 'Файл';

file = DATA FILE (LeFile);
legalEntity = DATA LegalEntity (LeFile) NONULL DELETE;
name 'Наименование' = DATA STRING (LeFile);

open 'Открыть' (LeFile f) { open(file(f)); }
load 'Загрузить' (LeFile f) {
    INPUT ff=file(f) CHANGE DO {}
}

EXTEND FORM legalEntity
    OBJECTS f = LeFile 
    PROPERTIES name(f), open(f) GRID, load(f) GRID, NEW(f), DELETE(f)
    FILTERS legalEntity(f) == o
;

DESIGN legalEntity {
    persons {
        MOVE BOX(f) { height = 150; }
    }
}