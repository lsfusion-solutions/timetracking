MODULE Extend1CImport;

REQUIRE EnterpriseDataTimeTracking;

// Такая странная штука для импорта "сбоку" от основной логики

CLASS EntryDetail 'Импортированные проводки';

dateTime 'Дата и время' = DATA DATETIME (EntryDetail);
representation 'Представление' = DATA STRING (EntryDetail);
number 'Номер' = DATA STRING (EntryDetail);
customer 'Клиент' = DATA Customer (EntryDetail);
namePartner 'Организация' (EntryDetail e) = name(customer(e)); 
accountman 'Бухгалтер' = DATA STRING (EntryDetail);
quantityEntries 'Количество проводок' = DATA INTEGER (EntryDetail);
quantityPersons 'Количество физлиц' = DATA INTEGER (EntryDetail);

partner (ISTRING[36] s) = OVERRIDE object(s) AS LegalEntity, object(s) AS Person; 

partner = DATA LOCAL ISTRING[36](INTEGER);
accountman = DATA LOCAL STRING(INTEGER);
quantityEntries = DATA LOCAL INTEGER(INTEGER);
quantityPersons = DATA LOCAL INTEGER(INTEGER);
dateTime = DATA LOCAL DATETIME (INTEGER);
number = DATA LOCAL STRING(INTEGER);
dateStop = DATA LOCAL DATE();
dateStart = DATA LOCAL DATE();
representation = DATA LOCAL STRING(INTEGER);
inn = DATA LOCAL STRING[12] ();
uid = DATA LOCAL ISTRING[36] ();

FORM importedEntries FORMEXTID 'Данные'
PROPERTIES() dateStop EXTID 'КонецПериода' ATTR, dateStart EXTID 'НачалоПериода' ATTR, inn EXTID 'ОрганизацияИНН' ATTR, uid EXTID 'ОрганизацияGUID' ATTR

OBJECTS d = INTEGER EXTID 'Документ'
PROPERTIES(d) partner EXTID 'Контрагент', accountman EXTID 'Ответственный', quantityEntries EXTID 'КоличествоПроводок', quantityPersons EXTID 'КоличествоФизлиц', dateTime EXTID 'Дата' ATTR, number EXTID 'Номер' ATTR, representation EXTID 'Представление' ATTR;

receiveEntries 'Получить проводки' () {
    NEWSESSION {
        LOCAL f = XMLFILE();
        TRY {
            listFiles(path());
            FOR STRING fn = fileName(INTEGER j) AND [FORMULA NULL BOOLEAN PG 'CASE WHEN $1 ~ \'[0-9]{10}\\.xml\' OR $1 ~ \'[0-9]{12}\\.xml\' THEN 1 ELSE NULL END'](fn) DO {
                READ path() + fn TO f;      
                IF f() THEN {
                    IMPORT importedEntries XML FROM f();
                    IF left(fn, 10) = inn() OR left(fn, 12) = inn() THEN {
                        // Не можем быть уверены в уникальности нумерации, поэтому просто сносим все
                        DELETE EntryDetail e WHERE DATE(dateTime(e)) <= dateStop() AND DATE(dateTime(e)) >= dateStart() AND inn(customer(e)) = inn();
                        FOR DATE(dateTime(INTEGER i)) <= dateStop() AND DATE(dateTime(i)) >= dateStart() NEW e = EntryDetail DO {
                            dateTime(e) <- dateTime(i);
                            number(e) <- number(i);
                            customer(e) <- customer(inn());
                            accountman(e) <- accountman(i);
                            quantityEntries(e) <- quantityEntries(i);
                            quantityPersons(e) <- quantityPersons(i);
                            representation(e) <- representation(i);
                        }
                        APPLY;
                        delete(path() + fn);
                    }
                } 
            }
        } CATCH {
            CANCEL;
        }
    }
} TOOLBAR;

inEntry 'Вкл.' = DATA LOCAL BOOLEAN (Customer);
inEntryCustomers 'Организации' () = GROUP CONCAT name(Customer c) IF inEntry(c), ', ' ORDER c CHARWIDTH 100;

FORM dialogCustomers 'Клиенты'
    OBJECTS c = Customer
    PROPERTIES inEntry(c), name(c) READONLY, namePartner(c) READONLY
    ORDERS name(c)
    FILTERS (GROUP SUM 1 IF c == customer(EntryDetail d))
        
    FILTERGROUP active FILTER 'Активный' active(c) 'F5' DEFAULT
;

DESIGN dialogCustomers {
    width = 450;
}

FORM entryDashboard 'Импортированные проводки'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES dFrom 'Дата с' = VALUE(df), dTo 'Дата по' = VALUE(dt), inEntryCustomers() ON CHANGE { DIALOG dialogCustomers;  }

    OBJECTS e = EntryDetail
    PROPERTIES (e)  READONLY dateTime, number, namePartner, quantityEntries, quantityPersons, representation, accountman
    PROPERTIES () receiveEntries
    
    FILTERS DATE(dateTime(e)) >= df AND DATE(dateTime(e)) <= dt,
            inEntry(customer(e)) OR NOT inEntryCustomers()
;

DESIGN entryDashboard {
    OBJECTS {
        NEW header {
            type = CONTAINERH;
            MOVE BOX(dates) { caption = ''; }
            MOVE PROPERTY(inEntryCustomers()) { align = CENTER; }
        }
        MOVE BOX(e);
    }
}

NAVIGATOR {
    dashboard {
        NEW entryDashboard;
    }
}

FORM entryDashboardPrint 'Импортированные проводки'
    OBJECTS dates = (df = DATE, dt = DATE) PANEL
    PROPERTIES dFrom 'Дата с' = VALUE(df), dTo 'Дата по' = VALUE(dt) 

    OBJECTS e = EntryDetail
    PROPERTIES(e) namePartner, dateTime, number, representation, accountman, quantityEntries, quantityPersons
    ORDERS namePartner(e), dateTime(e)
    
    FILTERS DATE(dateTime(e)) >= df AND DATE(dateTime(e)) <= dt,
            inEntry(customer(e)) OR NOT inEntryCustomers()
;

printEntryDashboard 'Печать (XLS)' (DATE df, DATE dt) {
    PRINT entryDashboardPrint OBJECTS df = df, dt = dt XLSX;
}

EXTEND FORM entryDashboard
    PROPERTIES printEntryDashboard(df, dt) DRAW e TOOLBAR 
;