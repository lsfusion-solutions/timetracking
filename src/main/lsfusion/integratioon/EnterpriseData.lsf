MODULE EnterpriseData;

REQUIRE Time, Utils;

NAMESPACE EnterpriseData;

META defProp(name, caption, type, class)
    name caption = ABSTRACT type (class);
    WHEN CHANGED(name(class o)) DO packet(o) <- NULL;
END

META defPropDetail(name, caption, type, class)
    name caption = ABSTRACT type (class, class##Detail);
    WHEN CHANGED(name(class o, class##Detail d)) AND in(o, d) DO packet(o) <- NULL;
END

dateTimeToString = FORMULA STRING 'to_char($1, \'YYYY-MM-DD"T"HH24:MI:SS\')';

idSended 'Номер переданного сообщения' = DATA INTEGER ();
isSended 'Сообщение передано' = DATA BOOLEAN ();
idTicket 'Получена квитанция' = DATA INTEGER ();

idReceived 'Номер принятого сообщения' = DATA INTEGER ();
isReceived 'Сообщение принято' = DATA BOOLEAN ();

dateStartExchange 'Дата начала обмена' = DATA DATE ();
 
toBase 'Префикс базы-получателя' = DATA STRING[2] () CHARWIDTH 4;
fromBase 'Префикс базы-отправителя' = DATA STRING[2] () CHARWIDTH 4;

currentDateTimeString() = dateTimeToString(currentDateTime());
availableVersion () = '1.5';
format () = 'http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.5';
exchangePlan () = 'СинхронизацияДанныхЧерезУниверсальныйФормат';
messageNo () = OVERRIDE idSended(), 0;
receivedNo () = OVERRIDE idReceived(), 0;
prefix () = fromBase();

path 'Путь обмена' () = DATA STRING ();
sendPath () = path() + 'Message_' + fromBase() + '_' + toBase();
receivePath () = path() + 'Message_' + toBase() + '_' + fromBase();

GROUP header EXTID 'msg:Header';
GROUP confirmation EXTID 'msg:Confirmation' : header;
GROUP body EXTID '=http://v8.1c.ru/edi/edi_stnd/EnterpriseData/1.5:Body';

FORM sendMessage FORMEXTID 'Message'
    PROPERTIES ATTR = 'http://www.1c.ru/SSL/Exchange/Message' EXTID 'xmlns:msg'
    PROPERTIES ATTR = 'http://www.w3.org/2001/XMLSchema' EXTID 'xmlns:xs'
    PROPERTIES ATTR = 'http://www.w3.org/2001/XMLSchema-instance' EXTID 'xmlns:xsi'
    
    PROPERTIES() IN header format EXTID 'msg:Format', currentDateTimeString EXTID 'msg:CreationDate'
    PROPERTIES() IN confirmation exchangePlan EXTID 'msg:ExchangePlan', toBase EXTID 'msg:To', fromBase EXTID 'msg:From', messageNo EXTID 'msg:MessageNo', receivedNo EXTID 'msg:ReceivedNo'
    PROPERTIES() IN header availableVersion EXTID 'msg:AvailableVersion', prefix EXTID 'msg:Prefix'
;

idReceivedTemp = DATA LOCAL INTEGER ();

FORM receiveMessage FORMEXTID 'Message'
    PROPERTIES() IN confirmation idReceivedTemp EXTID 'msg:MessageNo', idTicket EXTID 'msg:ReceivedNo'
;

// exchange properties
CLASS ABSTRACT EnterpriseData 'Универсальный обмен 1С';

uid 'UID' = DATA ISTRING[36] (EnterpriseData) INDEXED;
object 'Объект ЕД' = GROUP AGGR EnterpriseData ed BY uid(ed);

packet 'Пакет' = DATA INTEGER (EnterpriseData);

WHEN SET (EnterpriseData ed IS EnterpriseData) DO {
    generateUUID();
    uid(ed) <- generatedUUID();
}

afterReceive ABSTRACT LIST ();

receiveMessage 'Получить' () {
    NEWSESSION {
        LOCAL f = XMLFILE ();
        TRY {
            READ receivePath() + '.xml' TO f;
            IMPORT receiveMessage XML FROM f();
            IF idReceivedTemp() AND NOT idReceivedTemp() <= idReceived() THEN {
                idReceived() <- idReceivedTemp();
                isReceived() <- TRUE;
                afterReceive();
            } ELSE {
                isReceived() <- NULL;    
            }
            APPLY; 
        } CATCH {
            NEWSESSION APPLY { isReceived() <- NULL; }
        }
    }
}

afterSend ABSTRACT LIST ();

sendMessage 'Передать' () {
    NEWSESSION {
        TRY {
            idSended() <- messageNo() (+) 1;
            LOCAL f = XMLFILE ();
            EXPORT sendMessage XML TO f;
            WRITE f() TO sendPath();
            isSended() <- TRUE;
            afterSend();
            APPLY;
        } CATCH {
            NEWSESSION APPLY { isSended() <- NULL; }
            CANCEL;
        }
    }
}

EXTEND FORM options
    PROPERTIES () idSended BACKGROUND (IF isSended() THEN RGB(225,255,225) ELSE RGB(255, 225, 225)),
                  idReceived BACKGROUND (IF isReceived() THEN RGB(225,255,225) ELSE RGB(255, 225, 225)),
                  idTicket READONLY,
                  dateStartExchange, toBase, fromBase, path,
                  sendMessage, receiveMessage
;

DESIGN options {
    pane {
        NEW ennterpriseData {
            caption = 'Обмен 1С';
            NEW status {
                type = CONTAINERH;
                MOVE PROPERTY (idSended());
                MOVE PROPERTY (idReceived());
                MOVE PROPERTY (idTicket());
            }
            NEW basic {
                type = CONTAINERH;      
                MOVE PROPERTY (dateStartExchange());
                MOVE PROPERTY (toBase());
                MOVE PROPERTY (fromBase());
            }
            MOVE PROPERTY (path());
            TOOLBAR {
                MOVE PROPERTY (sendMessage());
                MOVE PROPERTY (receiveMessage());
            }
        }
    }
}