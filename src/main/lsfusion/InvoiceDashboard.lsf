MODULE InvoiceDashboard;

REQUIRE Invoice, Dashboard, InvoiceWord, TimeEntryWord;

NAMESPACE Invoice;

toInvoice 'Часов' = GROUP SUM hours(TimeEntry e) IF NOT invoice(e) BY project(e); 

dateFrom 'Дата с' = DATA LOCAL DATE ();
dateTo 'Дата по' = DATA LOCAL DATE ();

skip = DATA BOOLEAN (TimeEntry);

skipTimeEntry 'Удалить' (TimeEntry e) {
    NEWSESSION {
        skip(e) <- TRUE;
        APPLY;
    }
}

FORM invoiceDashboard 'Выставление счетов'

    OBJECTS p = Project
    PROPERTIES(p) READONLY nameCustomer, name, toInvoice
    FILTERS assigned(p, currentEmployee())
    ORDERS nameCustomer(p)
    FILTERGROUP toInvoice
        FILTER 'Выставить счет' toInvoice(p) 'F11' DEFAULT
    FILTERGROUP active FILTER 'Активный' active(customer(p)) 'F5' DEFAULT
    
    PROPERTIES dateFrom(), dateTo()
    
    OBJECTS t = TimeEntry
    PROPERTIES(t) READONLY namePractice, nameEmployee, nameTaskType, dateTimeStart, hours BACKGROUND userHours(t), nameTask, nameActivity, dateTimeFinish 
    PROPERTIES skipTimeEntry(t) TOOLBAR
    FILTERS project(t) == p,
            NOT skip(t),
            NOT inProcess(t),
            NOT invoice(t),
            assigned(project(t), currentEmployee()),
            (DATE (dateTimeFinish(t)) >= dateFrom() OR NOT dateFrom()) AND (DATE (dateTimeFinish(t)) <= dateTo() OR NOT dateTo())
    
    OBJECTS i = Invoice
    PROPERTIES(i) READONLY date, series, number, nameCustomer, nameProject, fromDate, toDate, hours, nameAuthor, sumDiscount, sumVAT
    PROPERTIES(i) TOOLBAR generateWordTypes
    PROPERTIES(i) NEWSESSION EDIT, DELETE
    ORDERS date(i) DESC
    FILTERS assigned(project(i), currentEmployee())
    FILTERGROUP customer
        FILTER 'По проекту' project(i) == p 'F10'
;

DESIGN invoiceDashboard {
    NEW pane FIRST {
        fill = 1;
        type = SPLITV;
        NEW toInvoice {
            caption = 'Не выставлен счет';
            fill = 1;
            type = SPLITH;
            MOVE BOX(p);
            MOVE BOX(t) {
                fill = 2;
            }
        }
        MOVE BOX(i);
        
    }
}

NAVIGATOR {
    dashboard {
        NEW invoiceDashboard;
    }
}

// Выставление счетов
in 'Отм' = DATA LOCAL BOOLEAN (TimeEntry);
countTimeEntry = GROUP SUM 1 IF in(TimeEntry e);

createInvoice 'Выставить счет' (Project p)  { 
    NEWSESSION NESTED (in) {
        NEW i = Invoice {
            project(i) <- p;
            author(i) <- currentEmployee();
            invoice(TimeEntry e) <- i WHERE in(e) AND project(e) = p AND NOT skip(e);
            DIALOG invoice OBJECTS i = i DO {
                SEEK invoiceDashboard.i = i;
            }
        }
    }
}

createInvoiceDates 'Выставить счет за период' (Project p)  { 
    NEWSESSION NESTED (dateFrom[], dateTo[]) {
        NEW i = Invoice {
            project(i) <- p;
            author(i) <- currentEmployee();
            invoice(TimeEntry e) <- i WHERE NOT DATE(OVERRIDE dateTimeFinish(e), dateTimeStart(e)) < dateFrom() AND NOT DATE(OVERRIDE dateTimeFinish(e), dateTimeStart(e)) > dateTo() AND project(e) = p AND NOT skip(e);
            DIALOG invoice OBJECTS i = i DO {
                SEEK invoiceDashboard.i = i;
            }
        }
    }
}

EXTEND FORM invoiceDashboard
    PROPERTIES(t) in BEFORE namePractice(t)
    PROPERTIES(p) createInvoice DRAW t SHOWIF countTimeEntry() TOOLBAR, createInvoiceDates
;

DESIGN invoiceDashboard {
    toInvoice {
        NEW timeEntry AFTER BOX (p) {
//            caption = 'Трудозатраты';
            NEW filters {
                caption = 'Фильтр';
                type = CONTAINERH;
                MOVE PROPERTY (dateFrom());
                MOVE PROPERTY (dateTo());
                MOVE PROPERTY (createInvoiceDates(p));
            }
            MOVE BOX (t);
        }
    }   
}

hasChanged 'Вносились изменения' (Invoice i) = IF (GROUP SUM 1 IF invoice(InvoiceHistory h) == i) THEN TRUE;

EXTEND FORM invoiceDashboard
    PROPERTIES(i) READONLY hasChanged BEFORE date(i)
;