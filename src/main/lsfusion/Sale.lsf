MODULE Sale;

REQUIRE Employee, LegalEntity, Time;

NAMESPACE Sale;

CLASS Sale 'Продажа';

name 'Название' = DATA STRING[250] (Sale) CHARWIDTH 30;

CLASS SaleStage 'Этап продажи';

name 'Название' = DATA STRING[250] (SaleStage);
editSaleStage () = IF sid(mainRole(currentUser())) == 'admin' THEN TRUE;

FORM saleStage 'Этап продажи'
    OBJECTS s = SaleStage PANEL 
    PROPERTIES name(s)
    
    EDIT SaleStage OBJECT s;
;

FORM saleStages 'Этапы продаж'
    OBJECTS s = SaleStage
    PROPERTIES READONLY name(s)
    
    LIST SaleStage OBJECT s;
;

FORM saleStagesMasterdata 'Этапы продаж'
    OBJECTS s = SaleStage
    PROPERTIES READONLY name(s)
    PROPERTIES (s) NEWSESSION SHOWIF editSaleStage() NEW, EDIT, DELETE
;


NAVIGATOR {
    masterData {
        NEW saleStagesMasterdata;
    }
}

FORM dialogSaleStages 'Этапы продаж'
    OBJECTS s = SaleStage
    PROPERTIES READONLY name(s)
    PROPERTIES(s) NEWSESSION SHOWIF editSaleStage() NEW, EDIT, DELETE
;

stage = DATA SaleStage (Sale);
nameStage 'Этап' (Sale s) = name(stage(s)) CHARWIDTH 25;

owner = DATA Employee (Sale);
nameOwner 'Владелец' (Sale s) = CONCAT ' ', lastName(owner(s)), firstName(owner(s)) CHARWIDTH 25;

customer = DATA LegalEntity (Sale);
nameCustomer 'Покупатель' (Sale s) = shortName(customer(s));

amount 'Сумма' = DATA NUMERIC[16,2] (Sale);
probability 'Вероятность, %' = DATA INTEGER (Sale);

CONSTRAINT probability(Sale s) AND probability(s) < 0 OR probability(s) > 100 MESSAGE 'Вероятность должна быть от 0 до 100 %';

creator = DATA Employee (Sale);
nameCreator 'Создатель ' (Sale s) = CONCAT ' ', lastName(creator(s)), firstName(creator(s)) CHARWIDTH 25;

WHEN LOCAL SET(Sale s IS Sale) DO creator(s) <- currentUser();

CLASS SaleChannel 'Канал продажи';

name 'Название' = DATA STRING[250] (SaleChannel);
editSaleChannel () = sid(mainRole(currentUser())) == 'admin';

FORM saleChannel 'Канал продажи'
    OBJECTS s = SaleChannel PANEL 
    PROPERTIES name(s)
    
    EDIT SaleChannel OBJECT s;
;

FORM saleChannels 'Каналы продаж'
    OBJECTS s = SaleChannel
    PROPERTIES READONLY name(s)
    
    LIST SaleChannel OBJECT s;
;

FORM saleChannelsMasterdata 'Каналы продаж'
    OBJECTS s = SaleChannel
    PROPERTIES READONLY name(s)
    PROPERTIES(s) NEWSESSION SHOWIF editSaleChannel() NEW, EDIT, DELETE
;

NAVIGATOR {
    masterData {
        NEW saleChannelsMasterdata;
    }
}

FORM dialogSaleChannels 'Каналы продаж'
    OBJECTS s = SaleChannel
    PROPERTIES READONLY name(s)
    PROPERTIES(s) NEWSESSION SHOWIF editSaleChannel() NEW, EDIT, DELETE
;

channel = DATA SaleChannel (Sale);
nameChannel 'Источник' (Sale s) = name(channel(s)) CHARWIDTH 25;

note 'Заметки' = DATA TEXT (Sale);

CLASS SaleRole 'Роль в продаже';

name 'Название' = DATA STRING[250] (SaleRole);
editSaleRole () = IF sid(mainRole(currentUser())) == 'admin' THEN TRUE;

FORM saleRole 'Роль в продаже'
    OBJECTS s = SaleRole PANEL 
    PROPERTIES name(s)
    
    EDIT SaleRole OBJECT s;
;

FORM saleRoles 'Роли в продаже'
    OBJECTS s = SaleRole
    PROPERTIES READONLY name(s)
    PROPERTIES(s) NEWSESSION SHOWIF editSaleRole() NEW, EDIT, DELETE
    
    LIST SaleRole OBJECT s;
;

NAVIGATOR {
    masterData {
        NEW saleRoles;
    }
}

FORM dialogSaleRoles 'Роли в продаже'
    OBJECTS s = SaleRole
    PROPERTIES READONLY name(s)
    PROPERTIES(s) NEWSESSION SHOWIF editSaleRole() NEW, EDIT, DELETE
;

role = DATA SaleRole (Person);
nameRole 'Роль в продаже' (Person p) = name(role(p)) CHARWIDTH 25;

CLASS StageHistory 'История этапов';

sale = DATA Sale (StageHistory);
newStage = DATA SaleStage (StageHistory);
nameNewStage 'Новый статус' (StageHistory s) = name(newStage(s)) CHARWIDTH 25;
amount 'Сумма' = DATA NUMERIC[16,2] (StageHistory);
probability 'Вероятность, %' = DATA INTEGER (StageHistory);
date 'Дата изменения' = DATA DATE (StageHistory);
user = DATA Employee (StageHistory);
nameUser 'Автор' (StageHistory s) = CONCAT ' ', lastName(user(s)), firstName(user(s)) CHARWIDTH 25;

prev (StageHistory s) = PARTITION PREV s ORDER date(s), s BY sale(s);
prevDate (StageHistory s) = date(prev(s));
daysBetweenPrev 'Дней с прошлого изменения' (StageHistory s) = daysBetweenDates(prevDate(s), date(s));

WHEN CHANGED(stage(Sale s)) DO {
    NEW h = StageHistory {
        sale(h) <- s;
        newStage(h) <- stage(s);
        amount(h) <- amount(s);
        probability(h) <- probability(s);
        date(h) <- currentDate();
        user(h) <- currentUser();
    }   
}

changeOwner (Sale s) {
    DIALOG dialogEmployee OBJECTS e INPUT DO {
        owner(s) <- e; 
    } 
}

changeCreator (Sale s) {
    DIALOG dialogEmployee OBJECTS e INPUT DO {
        creator(s) <- e; 
    } 
}

in 'Вкл' = DATA BOOLEAN (Person, Sale);

addInterraction 'Добавить' (Sale s) {
    NEWSESSION {
        DIALOG persons OBJECTS p INPUT DO {
            in(p, s) <- TRUE;
            NEW i = Interraction {
                person(i) <- p;
            }
        }
        APPLY;
    }
} IMAGE 'add.png' TOOLBAR;

addPerson2 'Добавить' (Sale s) {
    NEWSESSION {
        DIALOG persons OBJECTS p INPUT DO {
            in(p, s) <- TRUE;
        }
        APPLY;
    }
} IMAGE 'add.png' TOOLBAR;

deleteInterraction 'Удалить' (Sale s, Interraction i) {
    NEWSESSION {
        IF (GROUP SUM 1 IF in(person(Interraction ii), s) AND person(ii) == person(i)) == 1 THEN in(person(i), s) <- NULL;
        DELETE(i);
        APPLY;
    }
} IMAGE 'delete.png' TOOLBAR;

employee = DATA Employee (Interraction);
nameEmployee 'Сотрудник ' (Interraction i) = name(employee(i)) CHARWIDTH 30;
namePerson 'Физическое лицо' (Interraction i) = CONCAT ' ', firstName(person(i)), lastName(person(i)), middleName(person(i)) CHARWIDTH 60;
role = DATA SaleRole (Interraction);
nameRolePerson 'Роль в продаже' (Interraction i) = name(role(i)) CHARWIDTH 20;
phonePerson 'Телефон' (Interraction i) = phone(person(i));
emailPerson 'Email' (Interraction i) = email(person(i));

WHEN LOCAL SET(Interraction i IS Interraction) DO {
    employee(i) <- currentUser();
    dateTime(i) <- currentDateTime();
}

changeRole (Interraction i) {
    
}

FORM sale 'Продажа'
    OBJECTS s = Sale PANEL
    PROPERTIES(s) name, nameStage, nameOwner ON CHANGE changeOwner(s), nameCustomer, amount, probability, 
        nameCreator ON CHANGE changeCreator(s), nameChannel, note
        
//    OBJECTS p = Person
//    PROPERTIES(p) READONLY lastName, firstName, middleName, address, phone, email
//    PROPERTIES addPerson(s) DRAW p
//    PROPERTIES deletePerson(s, p) DRAW p  
//    FILTERS in(p, s)
    
    OBJECTS i = Interraction
    PROPERTIES(i) dateTime, nameEmployee, namePerson, nameRolePerson, nameType, description, phonePerson READONLY, emailPerson READONLY
    PROPERTIES addInterraction(s) DRAW i TOOLBAR, deleteInterraction(s, i)
    FILTERS in(person(i), s)
    
//    OBJECTS p2 = Person
//    PROPERTIES(p2) READONLY lastName, firstName, middleName
//    PROPERTIES(p2) nameRole
//    PROPERTIES addPerson2(s) DRAW p2
//    PROPERTIES deletePerson(s, p2) DRAW p2  
//    FILTERS in(p2, s)
    
    OBJECTS h = StageHistory
    PROPERTIES(h) READONLY nameNewStage, amount, probability, daysBetweenPrev, date, nameUser
    FILTERS sale(h) == s
    
    EDIT Sale OBJECT s
;

DESIGN sale {
    OBJECTS {
        MOVE BOX(s);
        NEW note {
            align = STRETCH;
            MOVE PROPERTY(note(s)) { panelCaptionAbove = TRUE; }
        }
        NEW body {
            fill = 1;
            type = TABBED;
            MOVE BOX(i) { caption = 'Журнал взаимодействия'; }
            //MOVE BOX(p2) { caption = 'Роли в продаже'; }
            MOVE BOX(h) { caption = 'История этапов'; }
        }
    }
}

FORM sales 'Продажи'
    OBJECTS s = Sale 
    PROPERTIES(s) READONLY name, nameStage, nameOwner, nameCustomer, amount, probability, nameCreator, nameChannel
    PROPERTIES notes 'Заметки' = STRING(note(s))
    PROPERTIES(s) NEWSESSION NEW, EDIT, DELETE 
    
    LIST Sale OBJECT s
;

NAVIGATOR {
    NEW FOLDER sale 'Продажи' AFTER documents WINDOW toolbar {
        NEW sales;
    }
}

salePerson = DATA BOOLEAN ();
onStarted() +{
    IF NOT salePerson() THEN {
        FOR customer(Sale s) DO {
            in(Person p, s) <- TRUE WHERE in(p, customer(s));
        }
        salePerson() <- TRUE;
        APPLY;
    }
}