MODULE Project;

REQUIRE Customer, Employee;

CLASS Project 'Проект';
TABLE project(Project);

name 'Наименование' = DATA ISTRING[200] (Project) CHARWIDTH 15;

customer 'Клиент' = DATA Customer (Project) NONULL;
nameCustomer 'Клиент' (Project p) = name(customer(p));

WHEN LOCAL SET(Customer c IS Customer) DO {
    NEW p = Project {
        customer(p) <- c;
    }
}

CLASS ProjectType 'Тип проекта' {
    type1 'Бухгалтерский due diligence',
    type2 'Налоговый due diligence',
    type3 'Обработка персональных данных (комплект документов)',
    type4 'Разработка loan note instrument',
    type5 'Разработка SHA',
    type6 'Разработка договора конвертируемого займа (с КД)',
    type7 'Разработка корпоративного договора',
    type8 'Разработка опциона на заключение договора',
    type9 'Реструктуризация бизнеса (англ. Право)',
    type10 'Реструктуризация бизнеса (росс. Право)',
    type11 'Совет директоров (комплект документов)',
    type12 'Сопровождение купли-продажи долей/акций (англ. Право)',
    type13 'Сопровождение купли-продажи долей/акций (росс. Право)',
    type14 'Сопровождение сделки (заем, англ. Право)',
    type15 'Сопровождение сделки (заем, росс право)',
    type16 'Сопровождение сделки (инвестиции в капитал, англ. Право)',
    type17 'Сопровождение сделки (инвестиции в капитал, росс право)',
    type18 'Финансовый due diligence',
    type19 'Юридический due diligence'   
}

name 'Тип проекта' (ProjectType t) = staticCaption(t);

type 'Тип проекта' = DATA ProjectType (Project);
nameType 'Тип проекта' (Project p) = name(type(p));

FORM ProjectTypes 'Типы проектов'
    OBJECTS t = ProjectType
    PROPERTIES READONLY name(t)
    ORDERS name(t)
    
    LIST ProjectType OBJECT t;
;

EXTEND FORM customer
    OBJECTS p = Project
    PROPERTIES(p) name, nameType, NEW, DELETE
    FILTERS customer(p) == c
;

DESIGN customer {
    leftPane {
        MOVE BOX(p);
    }
}

FORM dialogProject 'Выбор проекта'
    OBJECTS p = Project
    PROPERTIES(p) READONLY nameCustomer, name
    
    FILTERGROUP active FILTER 'Активный' active(customer(p)) 'F5' DEFAULT
    
    LIST Project OBJECT p; 
;  

// ---------- Назначение пользователей ----------- //

TABLE projectEmployee (Project, Employee);
assigned 'Вкл' = DATA BOOLEAN (Project, Employee);

assigned 'Вкл' (Customer c, Employee e) = GROUP SUM 1 IF assigned(Project p, e) BY customer(p);  

EXTEND FORM employee
    OBJECTS p = Project
    
    PROPERTIES assigned(p, e)
    PROPERTIES(p) READONLY nameCustomer, name
    ORDERS nameCustomer(p), name(p)
    
    FILTERGROUP active FILTER 'Активный' active(customer(p)) 'F5' DEFAULT
;

DESIGN employee {
    OBJECTS {
        MOVE BOX(p) AFTER BOX(e);
    }
}

responsible = DATA Employee (Project);
nameResponsible 'Ответственный за проект' (Project p) = CONCAT ', ', lastName(responsible(p)), firstName(responsible(p));

changeResponsible (Project p) {
    DIALOG dialogEmployee OBJECTS e INPUT DO {
        responsible(p) <- e;
    }
}

FORM projects 'Проекты'
    OBJECTS p = Project
    PROPERTIES(p) nameCustomer, name, nameType, nameResponsible ON CHANGE changeResponsible(p)
    PROPERTIES(p) NEW, DELETE
;

NAVIGATOR {
    masterData {
        NEW projects;
    }
}

projectManager 'Руководитель проекта' = DATA BOOLEAN (Employee, Project);

migrateASB = DATA BOOLEAN ();
onStarted() +{
    IF NOT migrateASB() THEN {
        FOR name(customer(Project p)) == 'asb' DO customer(p) <- GROUP MAX Customer c IF name(c) == 'АСБ Консалтинг Групп ООО';
        
        migrateASB() <- TRUE;
    }
}

include 'Вкл' = DATA BOOLEAN (Project, CustomUser);

EXTEND FORM customer
    OBJECTS u = CustomUser
    PROPERTIES include(p, u)
    PROPERTIES (u) login, sha256Password, firstName, lastName, email
    
    FILTERS in(u, userRoleSID('selfRegister'))
;

DESIGN customer {
    tabPane {
        NEW users {
            caption = 'Внешние пользователи';
            MOVE BOX(u) { 
                caption = 'Внешние пользователи';
            }
        }
    }
}