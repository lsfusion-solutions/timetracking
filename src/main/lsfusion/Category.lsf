MODULE Category;

REQUIRE Employee, Project, Dashboard, Currency;

CLASS Category 'Категория';
TABLE category (Category);

name 'Название' = DATA STRING[50] (Category) CHARWIDTH 15;
rate 'Ставка, руб.' = DATA NUMERIC[14,2] (Category);
currencyRate 'Ставка' = DATA NUMERIC[14,2] (Category, Currency);

FORM category 'Категория'
    OBJECTS c = Category PANEL
    PROPERTIES(c) name
    
    EDIT Category OBJECT c
;

FORM categories 'Категории'
    OBJECTS cur = Currency PANEL 
    PROPERTIES name(cur) ON CHANGE { DIALOG dialogCurrencies OBJECTS c INPUT DO { SEEK categories.cur = c; }}
    
    OBJECTS c = Category
    PROPERTIES(c) READONLY name
    PROPERTIES currencyRate(c, cur)
    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE
    
    EVENTS 
        ON INIT { SEEK categories.cur = currencyShortName('RUR'); }
;

FORM dialogCategory 'Выбор категории'
    OBJECTS c = Category
    PROPERTIES(c) READONLY name
    
    LIST Category OBJECT c
;

NAVIGATOR {
    masterData {
        NEW categories;
    }
}

category 'Категория' = DATA Category (Employee);
nameCategory 'Категория' (Employee e) = name(category(e));

EXTEND FORM employee
    PROPERTIES(e) nameCategory
;

EXTEND FORM employees
    PROPERTIES(e) READONLYIF isReadonly() nameCategory
;

hoursMonthly 'Часов в абонентской плате' = DATA NUMERIC[14,2] (Project);
sumMonthly 'Сумма абонентской платы' = DATA NUMERIC[14,2] (Project);

calcRate (Category cc, Currency c) = OVERRIDE
    round2(currencyRate(cc, currencyShortName('RUR')) / curRate((GROUP MAX TypeExchange t IF currency(t) == currencyShortName('RUR')), c)),
    round2((GROUP MAX currencyRate(cc, Currency cur) * curRate((GROUP MAX TypeExchange t IF currency(t) == currencyShortName('RUR')), cur) IF cur IS Currency) / 
    curRate((GROUP MAX TypeExchange t IF currency(t) == currencyShortName('RUR')), c));

TABLE project(Project, Category);
dataRate 'Ставка' = DATA NUMERIC[14,2] (Project, Category);
rate 'Ставка' (Project p, Category cc) = 
    OVERRIDE dataRate(p, cc), (currencyRate(cc, currency(p)) IF p IS Project), calcRate(cc, currency(p)); 
    
copyRates = DATA BOOLEAN ();
onStarted() +{
    //copyRates() <- NULL;
    IF NOT currencyShortName('RUR') THEN NEW c = Currency {
        shortName(c) <- 'RUR';
        name(c) <- 'Российский рубль';
    }
    IF NOT (GROUP SUM 1 IF currency(TypeExchange t) == currencyShortName('RUR')) THEN NEW t = TypeExchange {
        currency(t) <- currencyShortName('RUR');
        name(t) <- 'ЦБРФ';
    }
    
    IF NOT copyRates() THEN {
        FOR Category c IS Category DO {
            currencyRate(c, currencyShortName('RUR')) <- rate(c);
        }
        copyRates() <- TRUE;
    }
}

EXTEND FORM customer
    PROPERTIES(p) PANEL hoursMonthly, sumMonthly

    OBJECTS cc = Category
    PROPERTIES name(cc) READONLY, rate(p, cc) BACKGROUND dataRate(p, cc) HEADER('Ставка, ' + nameCurrency(p))
;

DESIGN customer {
    tabPane {
        NEW rates FIRST {
            caption = 'Оплата';
            NEW header {
                type = CONTAINERH;
                MOVE PROPERTY(hoursMonthly(p));
                MOVE PROPERTY(sumMonthly(p));
            }
            MOVE BOX(cc);
        }
    }
}

category = DATA Category(Employee, Project);
nameCategory 'Категория' (Employee e, Project p) = name(category(e, p));

overCategory (Employee e, Project p) = OVERRIDE category(e, p), category(e);
nameOverCategory 'Категория' (Employee e, Project p) = name(overCategory(e, p));

EXTEND FORM customer 
    OBJECTS e = Employee
    PROPERTIES name(e) READONLY, projectManager(e, p), nameCategory(e, p)
    ORDERS projectManager(e, p) DESC, name(e)
    FILTERS assigned(p, e) AND NOT fired(e)
    FILTERGROUP category FILTER 'По категории' category(e) == cc
    FILTERGROUP cat FILTER 'Неосновные категории' NOT category(e) == category(e, p)
;

DESIGN customer {
    rates {
        MOVE BOX (e) AFTER BOX (cc);
    }
}

addEmployees 'Добавить сотрудников' (Project p) {
    NEWSESSION {
        DIALOG dialogEmployee DO {
            FOR include(Employee e) DO assigned(p, e) <- TRUE;
            APPLY;
        }
    }
}

deleteEmployee 'Удалить сотрудника' (Project p,Employee e) {
    NEWSESSION {
        assigned(p, e) <- NULL;
        APPLY;
    }
}

EXTEND FORM customer
    PROPERTIES addEmployees(p) DRAW e TOOLBAR, deleteEmployee(p, e)  DRAW e TOOLBAR
;

maxAmountMonthly 'Не более чем' = DATA NUMERIC[15,2] (Project);

EXTEND FORM customer
    PROPERTIES(p) maxAmountMonthly PANEL AFTER sumMonthly(p)
;

DESIGN customer {
    header {
        MOVE PROPERTY(maxAmountMonthly(p)) AFTER PROPERTY(sumMonthly(p));
    }
}

DESIGN customer {
    BOX(e) {
        TOOLBARLEFT(e) {
            //type = CONTAINERV;
            NEW toolbar {
                type = CONTAINERH;
                MOVE FILTERGROUP(category);
                MOVE FILTERGROUP(cat);
                MOVE PROPERTY(addEmployees(p));
                MOVE PROPERTY(deleteEmployee(p, e));
            }
            TOOLBARSYSTEM(e) {align = START; }
        }
    }
}

FORM employeeHierarchy 'Cотрудник'
    OBJECTS e = Employee PANEL
    PROPERTIES(e) firstName, lastName, email, nameCategory, namePractice
    ORDERS lastName(e)
    
    OBJECTS p = Project
    PROPERTIES(p) READONLY name, nameCustomer
    FILTERS assigned(p, e)
    
    OBJECTS manager = Employee
    PROPERTIES(manager) READONLY firstName, lastName, nameCategory, namePractice
    FILTERS managers(e, manager) AND NOT fired(manager)
    
    OBJECTS employee = Employee
    PROPERTIES(employee) READONLY firstName, lastName, nameCategory, namePractice
    FILTERS managers(employee, e) AND NOT fired(employee)
;

DESIGN employeeHierarchy {
    OBJECTS {
        NEW header {
            MOVE BOX(e);
        }
        NEW tabs {
            fill = 1;
            tabbed = TRUE;
            MOVE BOX(p) { caption = 'Проекты'; }
            MOVE BOX(manager) { caption = 'Руководители'; }
            MOVE BOX(employee) { caption = 'Подчинённые'; }
        }
    }
}

editHierarchy 'Редактировать' (Employee e) {
    SHOW employeeHierarchy OBJECTS e = e;
}

FORM employeeHierarchies 'Иерархия сотрудников'
    OBJECTS e = Employee 
    PROPERTIES(e) firstName ON CHANGE editHierarchy(e), lastName ON CHANGE editHierarchy(e), email ON CHANGE editHierarchy(e), 
        nameCategory ON CHANGE editHierarchy(e), namePractice ON CHANGE editHierarchy(e)
    PROPERTIES NEWSESSION editHierarchy(e) TOOLBAR 
    ORDERS lastName(e)
    FILTERS NOT isLocked(e), NOT fired(e)
;

NAVIGATOR {
    dashboard {
        NEW employeeHierarchies;
    }
}